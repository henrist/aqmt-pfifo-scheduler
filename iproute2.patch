From c6db1cddc9cd975cb5057d03555cfc9a1d0be128 Mon Sep 17 00:00:00 2001
From: Henrik Steen <henrist@henrist.net>
Date: Sun, 9 Apr 2017 22:07:29 +0200
Subject: [PATCH] pfifo_aqmt: Add tc support

---
 tc/Makefile      |  1 +
 tc/q_fifo_aqmt.c | 78 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 79 insertions(+)
 create mode 100644 tc/q_fifo_aqmt.c

diff --git a/tc/Makefile b/tc/Makefile
index 7fd0c4a..7d6047f 100644
--- a/tc/Makefile
+++ b/tc/Makefile
@@ -12,6 +12,7 @@ SHARED_LIBS ?= y
 
 TCMODULES :=
 TCMODULES += q_fifo.o
+TCMODULES += q_fifo_aqmt.o
 TCMODULES += q_sfq.o
 TCMODULES += q_red.o
 TCMODULES += q_prio.o
diff --git a/tc/q_fifo_aqmt.c b/tc/q_fifo_aqmt.c
new file mode 100644
index 0000000..f321bfe
--- /dev/null
+++ b/tc/q_fifo_aqmt.c
@@ -0,0 +1,78 @@
+/*
+ * q_fifo.c     FIFO.
+ *
+ *      This program is free software; you can redistribute it and/or
+ *      modify it under the terms of the GNU General Public License
+ *      as published by the Free Software Foundation; either version
+ *      2 of the License, or (at your option) any later version.
+ *
+ * Authors: Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>
+ *
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <syslog.h>
+#include <fcntl.h>
+#include <sys/socket.h>
+#include <netinet/in.h>
+#include <arpa/inet.h>
+#include <string.h>
+
+#include "utils.h"
+#include "tc_util.h"
+
+static void explain(void)
+{
+    fprintf(stderr, "Usage: ... pfifo_aqmt [ limit NUMBER ]\n");
+}
+
+static int fifo_parse_opt(struct qdisc_util *qu, int argc, char **argv, struct nlmsghdr *n)
+{
+    int ok = 0;
+    struct tc_fifo_qopt opt = {};
+
+    while (argc > 0) {
+        if (strcmp(*argv, "limit") == 0) {
+            NEXT_ARG();
+            if (get_size(&opt.limit, *argv)) {
+                fprintf(stderr, "%s: Illegal value for \"limit\": \"%s\"\n", qu->id, *argv);
+                return -1;
+            }
+            ok++;
+        } else if (strcmp(*argv, "help") == 0) {
+            explain();
+            return -1;
+        } else {
+            fprintf(stderr, "%s: unknown parameter \"%s\"\n", qu->id, *argv);
+            explain();
+            return -1;
+        }
+        argc--; argv++;
+    }
+
+    if (ok)
+        addattr_l(n, 1024, TCA_OPTIONS, &opt, sizeof(opt));
+    return 0;
+}
+
+static int fifo_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt)
+{
+    struct tc_fifo_qopt *qopt;
+
+    if (opt == NULL)
+        return 0;
+
+    if (RTA_PAYLOAD(opt)  < sizeof(*qopt))
+        return -1;
+    qopt = RTA_DATA(opt);
+    fprintf(f, "limit %up", qopt->limit);
+    return 0;
+}
+
+struct qdisc_util pfifo_aqmt_qdisc_util = {
+    .id = "pfifo_aqmt",
+    .parse_qopt = fifo_parse_opt,
+    .print_qopt = fifo_print_opt,
+};
-- 
2.9.3

base-commit: f36ba8a4cdbc8239a6054d35ff00dd387b7fc2f0
